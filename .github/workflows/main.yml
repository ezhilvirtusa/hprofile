name: Hprofile Actions
on: workflow_dispatch
jobs:
  Testing:
      runs-on: ubuntu-latest
      steps:
        - name: code checkout
          uses: actions/checkout@v4

        - name: Maven test
          run: mvn test

        - name: checkstyle
          run: mvn checkstyle:checkstyle
  
        - name: sonar runnner
        # Setup java 17 to be default (sonar-scanner requirement as of 5.x)
          uses: actions/setup-java@v3
          with:
            distribution: 'temurin' # See 'Supported distributions' for available options
            java-version: '17'

    # Setup sonar-scanner1
        - name: Setup SonarQube
          uses: warchant/setup-sonar-scanner@v7

    # Run sonar-scanner
        - name: SonarQube Scan
          run: sonar-scanner
              -Dsonar.host.url=${{ secrets.SONAR_URL }}
              -Dsonar.login=${{ secrets.SONAR_TOKEN }}
              -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
              -Dsonar.projectKey=${{ secrets.SONAR_PROJECTKEY }}
              -Dsonar.sources=src/
              -Dsonar.junit.reportsPath=target/surefire-reports/ 
              -Dsonar.jacoco.reportsPath=target/jacoco.exec 
              -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml
              -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/
  
  BUILD_AND_PUBLISH:
    needs: Testing
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Update application.properties file
        run: |
          sed -i "s/^jdbc.username.*$/jdbc.username\=${{ secrets.RDS_USERNAME }}/" src/main/resources/application.properties
          sed -i "s/^jdbc.password.*$/jdbc.password\=${{ secrets.RDS_PASSWORD }}/" src/main/resources/application.properties
          sed -i "s/db01/${{ secrets.RDS_ENDPOINT }}/" src/main/resources/application.properties

      - name: Build & Upload image to ECR
        uses: appleboy/docker-ecr-action@master
        with:
         access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
         secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         registry: ${{ secrets.REGISTRY }}
         repo: actapp
         region: ${{ env.AWS_REGION }}
         tags: latest,${{ github.run_number }}
         daemon_off: false
         dockerfile: ./Dockerfile
         context: ./
